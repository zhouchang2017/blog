(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{CZVI:function(e,a,t){"use strict";t.d(a,"a",(function(){return w}));var c=t("wx14"),s=t("Ff2n"),n=t("q1tI"),b=t.n(n),p=t("8Kt/"),o=t.n(p),l=b.a.createElement;function m(e){var{children:a}=e;return l("h1",{className:"text-3xl leading-9 font-extrabold text-gray-900 tracking-tight sm:text-4xl sm:leading-10 md:text-5xl md:leading-14"},a)}var r=t("SYun"),d=t.n(r),i=t("YFqc"),j=t.n(i),N=t("nOHt"),O=t("7ljp"),h=b.a.createElement,x={pre:e=>{var{className:a}=e,t=Object(s.a)(e,["className"]);return h("pre",Object(c.a)({className:"".concat(a," rounded-md bg-gray-800 py-3 px-4 overflow-x-auto")},t))},"pre.code":e=>{var{className:a}=e,t=Object(s.a)(e,["className"]);return h("code",Object(c.a)({className:"".concat(a," text-gray-200")},t))}},u=d()("{dddd}, {MMMM} {DD}, {YYYY}");function w(e){var{meta:a,children:t,posts:c}=e,s=Object(N.useRouter)(),n=c.findIndex(e=>e.link===s.pathname),b=c[n+1],p=c[n-1];return h("article",{className:"xl:divide-y xl:divide-gray-200"},h(o.a,null,h("title",null,a.title," \u2013 Tailwind CSS"),h("meta",{name:"twitter:card",content:"summary_large_image"}),h("meta",{name:"twitter:site",content:"@tailwindcss"}),h("meta",{name:"twitter:creator",content:"@tailwindcss"}),h("meta",{name:"twitter:title",content:"".concat(a.title," \u2013 Tailwind CSS")}),h("meta",{name:"twitter:description",content:a.description}),h("meta",{name:"twitter:image",content:"https://blog.tailwindcss.com".concat(a.image)}),h("meta",{property:"og:url",content:"https://blog.tailwindcss.com".concat(s.pathname)}),h("meta",{property:"og:type",content:"article"}),h("meta",{property:"og:title",content:"".concat(a.title," \u2013 Tailwind CSS")}),h("meta",{property:"og:description",content:a.description}),h("meta",{property:"og:image",content:"https://blog.tailwindcss.com".concat(a.image)}),h("meta",{name:"description",content:a.description})),h("header",{className:"pt-6 xl:pb-10"},h("div",{className:"space-y-1 text-center"},h("dl",{className:"space-y-10"},h("div",null,h("dt",{className:"sr-only"},"Published on"),h("dd",{className:"text-base leading-6 font-medium text-gray-500"},h("time",{dateTime:a.date},u.render(new Date(a.date)))))),h("div",null,h(m,null,a.title)))),h("div",{className:"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:col-gap-6 pb-16 xl:pb-20",style:{gridTemplateRows:"auto 1fr"}},h("dl",{className:"pt-6 pb-10 xl:pt-11 xl:border-b xl:border-gray-200"},h("dt",{className:"sr-only"},"Authors"),h("dd",null,h("ul",{className:"flex justify-center xl:block space-x-8 sm:space-x-12 xl:space-x-0 xl:space-y-8"},a.authors.map(e=>h("li",{key:e.twitter,className:"flex items-center space-x-2"},h("img",{src:e.avatar,alt:"",className:"w-10 h-10 rounded-full"}),h("dl",{className:"text-sm font-medium leading-5 whitespace-no-wrap"},h("dt",{className:"sr-only"},"Name"),h("dd",{className:"text-gray-900"},e.name),h("dt",{className:"sr-only"},"Twitter"),h("dd",null,h("a",{href:"https://twitter.com/".concat(e.twitter),className:"text-teal-500 hover:text-teal-600"},e.twitter)))))))),h("div",{className:"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2"},h("div",{className:"prose max-w-none pt-10 pb-8"},h(O.a,{components:x},t)),a.discussion&&h("div",{className:"pt-6 pb-16"},h("p",null,"Want to talk about this post?"," ",h("a",{href:a.discussion,className:"font-medium text-teal-500 hover:text-teal-600"},"Discuss this on GitHub \u2192")))),h("footer",{className:"text-sm font-medium leading-5 divide-y divide-gray-200 xl:col-start-1 xl:row-start-2"},(p||b)&&h("div",{className:"space-y-8 py-8"},p&&h("div",null,h("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Next Article"),h("div",{className:"text-teal-500 hover:text-teal-600"},h(j.a,{href:p.link},h("a",null,p.title)))),b&&h("div",null,h("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Previous Article"),h("div",{className:"text-teal-500 hover:text-teal-600"},h(j.a,{href:b.link},h("a",null,b.title))))),h("div",{className:"pt-8"},h(j.a,{href:"/"},h("a",{className:"text-teal-500 hover:text-teal-600"},"\u2190 Back to the blog"))))))}},n4JK:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/tailwindcss-1-5",function(){return t("yrQ0")}])},oYSD:function(e,a,t){"use strict";a.a="/_next/static/media/card.4100211a1e8c828d30854e8672db26cf.jpg"},yrQ0:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return r})),t.d(a,"meta",(function(){return d})),t.d(a,"default",(function(){return N}));var c=t("Ff2n"),s=t("wx14"),n=t("q1tI"),b=t.n(n),p=t("7ljp"),o=t("CZVI"),l=t("iBhN"),m=t("oYSD"),r=(b.a.createElement,!0),d={title:"Tailwind CSS v1.5.0",description:"Tailwind CSS v1.5.0 is here, now with component variants, responsive container variants, focus-visible support, and more.",date:"2020-07-15T18:55:18.391Z",authors:[l.a],image:m.a,discussion:"https://github.com/tailwindcss/tailwindcss/discussions/2033"},i={meta:d},j=e=>Object(p.b)(o.a,Object(s.a)({meta:d},e));function N(e){var{components:a}=e,t=Object(c.a)(e,["components"]);return Object(p.b)(j,Object(s.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(p.b)("p",null,"I was hoping to save v1.5.0 for something ",Object(p.b)("em",{parentName:"p"},"really")," exciting but we needed a new feature to support the new ",Object(p.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/tailwindcss/typography"}),Object(p.b)("inlineCode",{parentName:"a"},"@tailwindcss/typography"))," plugin so h","*","ck it, we're dropping some new stuff on you early."),Object(p.b)("p",null,"No breaking changes, this is a minor release and we're professionals you silly goose."),Object(p.b)("h2",null,"New Features"),Object(p.b)("h3",null,"Component ",Object(p.b)("inlineCode",{parentName:"h3"},"variants")," support"),Object(p.b)("p",null,'Until Tailwind CSS v1.5.0, only "utility" classes were really intended to be used with ',Object(p.b)("inlineCode",{parentName:"p"},"variants"),' (like "responsive", "hover", "focus", etc.)'),Object(p.b)("p",null,"While these are still much more useful for utilities than any other type of class, we now support generating variants for component classes as well, like the ",Object(p.b)("inlineCode",{parentName:"p"},"prose")," classes in the new ",Object(p.b)("inlineCode",{parentName:"p"},"@tailwindcss/typography")," plugin:"),Object(p.b)("pre",{className:"language-html"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-html"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"<"),"article")," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-yellow"}),"class"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-green"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"="),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'),"prose md:prose-lg",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"')),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"\x3c!-- Content --\x3e"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"</"),"article"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n")),Object(p.b)("p",null,"You can take advantage of this feature in your own component classes by using the new ",Object(p.b)("inlineCode",{parentName:"p"},"variants")," option in the second argument of the ",Object(p.b)("inlineCode",{parentName:"p"},"addComponents")," plugin API:"),Object(p.b)("pre",{className:"language-js"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"plugin"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"function")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"{")," addComponents ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"}")),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"addComponents"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'.card'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// ..."),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    variants",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'responsive'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n")),Object(p.b)("p",null,"...or using the array shorthand you might be familiar with from the ",Object(p.b)("inlineCode",{parentName:"p"},"addUtilities")," API:"),Object(p.b)("pre",{className:"language-js"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"plugin"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"function")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"{")," addComponents ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"}")),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"addComponents"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'.card'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// ..."),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'responsive'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n")),Object(p.b)("p",null,"To take advantage of these feature in your custom CSS (rather than using the plugin API), you can use a new ",Object(p.b)("inlineCode",{parentName:"p"},"@layer"),' directive to explicitly tell Tailwind that your styles belong to the "components" bucket:'),Object(p.b)("pre",{className:"language-css"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-css"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:""}),"@layer")," components")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:""}),"@responsive"))," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:""}),".card"))," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"/* ... */"),"\n    ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(p.b)("p",null,'This helps Tailwind purge your unused CSS correctly, ensuring it doesn\'t remove any responsive component variants when using the default "conservative" purge mode.'),Object(p.b)("h3",null,"Responsive ",Object(p.b)("inlineCode",{parentName:"h3"},"container")," variants"),Object(p.b)("p",null,"Piggy-backing off of the new component ",Object(p.b)("inlineCode",{parentName:"p"},"variants")," support, the ",Object(p.b)("inlineCode",{parentName:"p"},"container")," class now supports variants!"),Object(p.b)("pre",{className:"language-html"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-html"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"\x3c!-- Only lock the width at `md` sizes and above --\x3e"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"<"),"div")," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-yellow"}),"class"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-green"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"="),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'),"md:container",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"')),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"\x3c!-- ... --\x3e"),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"</"),"div"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n")),Object(p.b)("p",null,"We've enabled responsive variants by default, but if you are sick in the head you can also manually enable other variants like ",Object(p.b)("inlineCode",{parentName:"p"},"focus"),", ",Object(p.b)("inlineCode",{parentName:"p"},"group-hover"),", whatever:"),Object(p.b)("pre",{className:"language-js"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// tailwind.config.js"),"\nmodule",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"exports")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// ..."),"\n  variants",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    container",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'responsive'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'focus'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'group-hover'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(p.b)("h3",null,"New ",Object(p.b)("inlineCode",{parentName:"h3"},"focus-visible")," variant"),Object(p.b)("p",null,"We've added support for the ",Object(p.b)("a",Object(s.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible"}),Object(p.b)("inlineCode",{parentName:"a"},":focus-visible")," pseudo-class")," using a new ",Object(p.b)("inlineCode",{parentName:"p"},"focus-visible")," variant."),Object(p.b)("p",null,"This is super useful for adding focus styles that ",Object(p.b)("em",{parentName:"p"},"only")," appear to keyboard users, and are ignored for mouse users:"),Object(p.b)("pre",{className:"language-html"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-html"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"<"),"button")," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-yellow"}),"class"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-green"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"="),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'),"focus-visible:outline-none focus-visible:shadow-outline ...",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"')),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n  Click me\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"</"),"button"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),">")),"\n")),Object(p.b)("p",null,"It's not enabled for anything by default, but you can enable it in the ",Object(p.b)("inlineCode",{parentName:"p"},"variants")," section of your config file:"),Object(p.b)("pre",{className:"language-js"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// tailwind.config.js"),"\nmodule",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"exports")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// ..."),"\n  variants",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    backgroundColor",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'responsive'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'hover'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'focus'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'focus-visible'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(p.b)("p",null,"Browser support is still pretty weak on this but getting better. In the mean time, check out the ",Object(p.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/WICG/focus-visible"}),"polyfill")," and corresponding ",Object(p.b)("a",Object(s.a)({parentName:"p"},{href:"https://github.com/csstools/postcss-focus-visible"}),"PostCSS plugin")," if you'd like to use this in all browsers right away."),Object(p.b)("h3",null,"New ",Object(p.b)("inlineCode",{parentName:"h3"},"checked")," variant"),Object(p.b)("p",null,"We've added a new ",Object(p.b)("inlineCode",{parentName:"p"},"checked")," variant you can use to conditionally style things like checkboxes and radio buttons:"),Object(p.b)("pre",{className:"language-html"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-html"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-red"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"<"),"input")," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-yellow"}),"type"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-green"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"="),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'),"checkbox",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'))," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-yellow"}),"class"),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-green"}),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"="),Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'),"bg-white checked:bg-blue-500",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),'"'))," ",Object(p.b)("span",Object(s.a)({parentName:"span"},{className:"text-code-white"}),"/>")),"\n")),Object(p.b)("p",null,"It's not enabled for anything by default, but you can enable it in the ",Object(p.b)("inlineCode",{parentName:"p"},"variants")," section of your config file:"),Object(p.b)("pre",{className:"language-js"},Object(p.b)("code",Object(s.a)({parentName:"pre"},{className:"language-js"}),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// tailwind.config.js"),"\nmodule",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"exports")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// ..."),"\n  variants",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    backgroundColor",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:""}),":")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'responsive'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'hover'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'focus'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),"'checked'"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n  ",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),","),"\n",Object(p.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")))}N.isMDXComponent=!0}},[["n4JK",0,2,1,3]]]);